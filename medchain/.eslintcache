[{"C:\\Users\\lenti\\Documents\\GitHub\\medchain\\medchain\\src\\index.js":"1","C:\\Users\\lenti\\Documents\\GitHub\\medchain\\medchain\\src\\components\\doctors\\medicalform.js":"2","C:\\Users\\lenti\\Documents\\GitHub\\medchain\\medchain\\src\\components\\doctors\\medicalform.elements.js":"3","C:\\Users\\lenti\\Documents\\GitHub\\medchain\\medchain\\src\\components\\doctors\\doctor.elements.js":"4","C:\\Users\\lenti\\Documents\\GitHub\\medchain\\medchain\\src\\components\\LogIn\\login.js":"5","C:\\Users\\lenti\\Documents\\GitHub\\medchain\\medchain\\src\\components\\patient\\patient.js":"6","C:\\Users\\lenti\\Documents\\GitHub\\medchain\\medchain\\src\\components\\patient\\patient.elements.js":"7","C:\\Users\\lenti\\Documents\\GitHub\\medchain\\medchain\\src\\components\\doctors\\doctor.js":"8"},{"size":426,"mtime":1607438800902,"results":"9","hashOfConfig":"10"},{"size":3602,"mtime":1607442050087,"results":"11","hashOfConfig":"10"},{"size":1386,"mtime":1607438800897,"results":"12","hashOfConfig":"10"},{"size":2897,"mtime":1607440871805,"results":"13","hashOfConfig":"10"},{"size":2945,"mtime":1607440781738,"results":"14","hashOfConfig":"10"},{"size":3195,"mtime":1607441496228,"results":"15","hashOfConfig":"10"},{"size":2211,"mtime":1607439980003,"results":"16","hashOfConfig":"10"},{"size":4465,"mtime":1607442276856,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"oq9wfg",{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\lenti\\Documents\\GitHub\\medchain\\medchain\\src\\index.js",[],"C:\\Users\\lenti\\Documents\\GitHub\\medchain\\medchain\\src\\components\\doctors\\medicalform.js",["35"],"C:\\Users\\lenti\\Documents\\GitHub\\medchain\\medchain\\src\\components\\doctors\\medicalform.elements.js",[],"C:\\Users\\lenti\\Documents\\GitHub\\medchain\\medchain\\src\\components\\doctors\\doctor.elements.js",[],"C:\\Users\\lenti\\Documents\\GitHub\\medchain\\medchain\\src\\components\\LogIn\\login.js",["36"],"import React, {useState} from 'react'\r\nimport { Container, HeaderbtnWrapper, Logo, LogoContainer, VideoBg, Background, Content ,QRWrapper} from './login.elements';\r\nimport sample from '../../video/video.mp4';\r\nimport { Button } from './ButtonElement'\r\nimport { FormWrapper, Select } from '../register/form.elements'\r\nimport { Searchwrapper, Input } from '../Searchbar/searchbar.elements'\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst axios = require('axios');\r\nconst crypto = require('crypto');\r\n\r\n\r\nexport const Login = props => {\r\n    const [hover, setHover] = useState(false)\r\n    const [key, setKey] = useState(\"\");\r\n    const [opt, setOpt] = useState(\"doctor\");\r\n    const [auth, setAuth] = useState(false);\r\n    const onHover = () => {\r\n        setHover(!hover)\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        // User submits their public key and checks\r\n        // for the hashed Pk in the database\r\n        const hash = crypto.createHash('sha256');\r\n        hash.update(key.toString('utf8'));\r\n        const addr = hash.digest('hex');\r\n        \r\n        axios.get(`/search/${opt}/${addr}`).then(res => {\r\n            if (res.data.error) { alert(res.data.error); }\r\n            else { setAuth(true); }\r\n        })\r\n        .catch((error) => {\r\n            console.error('Error:', error);\r\n            alert(\"This key is not found in the database\");\r\n        });\r\n        props.handleAlter(key);\r\n    }\r\n\r\n\r\n    return (\r\n        <Container>\r\n            { auth === true ? opt === \"doctor\" ? <Redirect to=\"/doctor\"/> : <Redirect to=\"/patient/:id\"/> : null}\r\n            <Background>\r\n                <VideoBg autoPlay loop muted src={sample} type='video/mp4' />\r\n            </Background>\r\n            <Content onSubmit={handleSubmit}>\r\n                <LogoContainer>\r\n                    <Logo/> MedChain\r\n                </LogoContainer>\r\n                <Searchwrapper>\r\n                        <Input type='text' \r\n                               placeholder='Please enter your key...'   \r\n                               value={key} \r\n                               onChange={ e => setKey(e.target.value)}\r\n                        />\r\n                </Searchwrapper>\r\n                <div>\r\n                    <FormWrapper onSubmit={handleSubmit}>\r\n                        <Select value={opt} onChange={e => setOpt(e.target.value)}>\r\n                            <option value=\"doctor\"> Doctor </option>\r\n                            <option value=\"patient\"> Patient </option>\r\n                        </Select>\r\n                    </FormWrapper>\r\n                </div>\r\n                <HeaderbtnWrapper>\r\n\r\n                    <Button  type='submit' value=\"Find Blockchain\"\r\n                        onMouseEnter={onHover} \r\n                        onMouseLeave={onHover}\r\n                    />\r\n                </HeaderbtnWrapper>\r\n            </Content>\r\n        </Container>\r\n    )\r\n};","C:\\Users\\lenti\\Documents\\GitHub\\medchain\\medchain\\src\\components\\patient\\patient.js",[],"C:\\Users\\lenti\\Documents\\GitHub\\medchain\\medchain\\src\\components\\patient\\patient.elements.js",["37"],"C:\\Users\\lenti\\Documents\\GitHub\\medchain\\medchain\\src\\components\\doctors\\doctor.js",["38","39","40","41"],{"ruleId":"42","severity":1,"message":"43","line":21,"column":5,"nodeType":"44","endLine":21,"endColumn":14,"suggestions":"45"},{"ruleId":"46","severity":1,"message":"47","line":2,"column":90,"nodeType":"44","messageId":"48","endLine":2,"endColumn":99},{"ruleId":"46","severity":1,"message":"49","line":3,"column":8,"nodeType":"44","messageId":"48","endLine":3,"endColumn":13},{"ruleId":"46","severity":1,"message":"50","line":16,"column":12,"nodeType":"44","messageId":"48","endLine":16,"endColumn":15},{"ruleId":"46","severity":1,"message":"51","line":16,"column":16,"nodeType":"44","messageId":"48","endLine":16,"endColumn":22},{"ruleId":"42","severity":1,"message":"52","line":18,"column":5,"nodeType":"44","endLine":18,"endColumn":14,"suggestions":"53"},{"ruleId":"54","severity":1,"message":"55","line":101,"column":44,"nodeType":"56","messageId":"57","endLine":101,"endColumn":46},"react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setTemp'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [props.check, props.id, props.pubkey, bool] as a second argument to the useEffect Hook.","Identifier",["58"],"no-unused-vars","'QRWrapper' is defined but never used.","unusedVar","'photo' is defined but never used.","'gen' is assigned a value but never used.","'setGen' is assigned a value but never used.","React Hook useEffect contains a call to 'setRemount'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [remount, clicked, getData, props.id] as a second argument to the useEffect Hook.",["59"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",{"desc":"60","fix":"61"},{"desc":"62","fix":"63"},"Add dependencies array: [props.check, props.id, props.pubkey, bool]",{"range":"64","text":"65"},"Add dependencies array: [remount, clicked, getData, props.id]",{"range":"66","text":"67"},[1142,1142],", [props.check, props.id, props.pubkey, bool]",[829,829],", [remount, clicked, getData, props.id]"]
[{"C:\\Users\\lenti\\Documents\\GitHub\\medchain\\medchain\\src\\index.js":"1","C:\\Users\\lenti\\Documents\\GitHub\\medchain\\medchain\\src\\components\\doctors\\doctor.js":"2","C:\\Users\\lenti\\Documents\\GitHub\\medchain\\medchain\\src\\components\\Searchbar\\searchbar.js":"3","C:\\Users\\lenti\\Documents\\GitHub\\medchain\\medchain\\src\\components\\register\\register.elements.js":"4","C:\\Users\\lenti\\Documents\\GitHub\\medchain\\medchain\\src\\components\\register\\register.js":"5","C:\\Users\\lenti\\Documents\\GitHub\\medchain\\medchain\\src\\App.js":"6","C:\\Users\\lenti\\Documents\\GitHub\\medchain\\medchain\\src\\components\\LogIn\\login.js":"7"},{"size":453,"mtime":1606414656136,"results":"8","hashOfConfig":"9"},{"size":2882,"mtime":1606804251504,"results":"10","hashOfConfig":"9"},{"size":364,"mtime":1606487243822,"results":"11","hashOfConfig":"9"},{"size":1607,"mtime":1606544473061,"results":"12","hashOfConfig":"9"},{"size":690,"mtime":1606694314523,"results":"13","hashOfConfig":"9"},{"size":2111,"mtime":1606805718110,"results":"14","hashOfConfig":"9"},{"size":3011,"mtime":1606805216134,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"oq9wfg",{"filePath":"18","messages":"19","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":2,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31"},"C:\\Users\\lenti\\Documents\\GitHub\\medchain\\medchain\\src\\index.js",["32"],"C:\\Users\\lenti\\Documents\\GitHub\\medchain\\medchain\\src\\components\\doctors\\doctor.js",["33","34","35","36","37","38"],"C:\\Users\\lenti\\Documents\\GitHub\\medchain\\medchain\\src\\components\\Searchbar\\searchbar.js",[],"C:\\Users\\lenti\\Documents\\GitHub\\medchain\\medchain\\src\\components\\register\\register.elements.js",[],"C:\\Users\\lenti\\Documents\\GitHub\\medchain\\medchain\\src\\components\\register\\register.js",[],"C:\\Users\\lenti\\Documents\\GitHub\\medchain\\medchain\\src\\App.js",["39","40","41","42","43"],"import './App.css';\r\nimport Login from  './components/LogIn/login'\r\nimport Register from './components/register/register';\r\nimport Doctor from './components/doctors/doctor';\r\nimport Patient from './components/patient/patient'\r\nimport Displayjson from './components/display/displayjson';\r\n\r\nimport {\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Route,\r\n  Link,\r\n  useRouteMatch,\r\n  useParams\r\n} from \"react-router-dom\";\r\n\r\nexport default function App() {\r\n  return (\r\n    <Router>\r\n      <div>\r\n        <ul>\r\n          <li>\r\n            <Link to=\"/\">Home</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/about\">About</Link>\r\n          </li>\r\n          <li>\r\n            <Link to=\"/topics\">Topics</Link>\r\n          </li>\r\n        </ul>\r\n\r\n        <Switch>\r\n          <Route path=\"/about\">\r\n            <About />\r\n          </Route>\r\n          <Route path=\"/topics\">\r\n            <Topics />\r\n          </Route>\r\n          <Route path=\"/\">\r\n            <Home />\r\n          </Route>\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nfunction Home() {\r\n  return <h2>Home</h2>;\r\n}\r\n\r\nfunction About() {\r\n  return <h2>About</h2>;\r\n}\r\n\r\nfunction Topics() {\r\n  let match = useRouteMatch();\r\n\r\n  return (\r\n    <div>\r\n      <h2>Topics</h2>\r\n\r\n      <ul>\r\n        <li>\r\n          <Link to={`${match.url}/components`}>Components</Link>\r\n        </li>\r\n        <li>\r\n          <Link to={`${match.url}/props-v-state`}>\r\n            Props v. State\r\n          </Link>\r\n        </li>\r\n      </ul>\r\n\r\n      {/* The Topics page has its own <Switch> with more routes\r\n          that build on the /topics URL path. You can think of the\r\n          2nd <Route> here as an \"index\" page for all topics, or\r\n          the page that is shown when no topic is selected */}\r\n      <Switch>\r\n        <Route path={`${match.path}/:topicId`}>\r\n          <Topic />\r\n        </Route>\r\n        <Route path={match.path}>\r\n          <h3>Please select a topic.</h3>\r\n        </Route>\r\n      </Switch>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction Topic() {\r\n  let { topicId } = useParams();\r\n  return <h3>Requested topic ID: {topicId}</h3>;\r\n}","C:\\Users\\lenti\\Documents\\GitHub\\medchain\\medchain\\src\\components\\LogIn\\login.js",["44","45","46","47","48","49","50","51","52"],"import React, {useState} from 'react'\r\nimport { Container, HeaderbtnWrapper, Header, Logo, LogoContainer, ArrowForward, ArrowRight, VideoBg, Background, Content } from './login.elements';\r\nimport sample from '../../video/video.mp4';\r\nimport SearchPage from '../Searchbar/searchbar.js';\r\nimport { Button } from './ButtonElement'\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Form from '../register/form'\r\n\r\n\r\nconst GreenCheckbox = withStyles({\r\n    root: {\r\n      color: \"#01bf71\",\r\n      '&$checked': {\r\n        color:\"#01bf71\",\r\n      },\r\n    },\r\n    checked: {},\r\n  })((props) => <Checkbox color=\"default\" {...props} />);\r\n\r\n\r\nfunction Login () {\r\n    const [hover, setHover] = useState(false)\r\n\r\n    const onHover = () => {\r\n        setHover(!hover)\r\n    }\r\n\r\n\r\n    const [state, setState] = React.useState({\r\n            patient: true,\r\n            doctor: true,\r\n    });\r\n      \r\n    const handleChange = (event) => {\r\n        setState({ ...state, [event.target.name]: event.target.checked });\r\n    };\r\n\r\n\r\n\r\n    return (\r\n        \r\n        \r\n        <Container>\r\n            <Background>\r\n                <VideoBg autoPlay loop muted src={sample} type='video/mp4' />\r\n            </Background>\r\n            <Content>\r\n                <LogoContainer>\r\n                    <Logo/> MedChain\r\n                </LogoContainer>\r\n                <Searchwrapper>\r\n                    <form>\r\n                        <Input type='text' placeholder='Please enter your key...'>\r\n                        </Input>\r\n                    </form>\r\n                </Searchwrapper>\r\n                {/* <FormGroup row>\r\n                <FormControlLabel\r\n                    control={<GreenCheckbox checked={state.doctor} onChange={handleChange} name=\"doctor\" />}\r\n                    label=\"Doctor\"\r\n                    style ={{\r\n                        color: \"white\",\r\n                      }}\r\n                      />\r\n                      \r\n                <FormControlLabel\r\n                    control={<GreenCheckbox checked={state.patient} onChange={handleChange} name=\"patient\" />}\r\n                    label=\"Patient\"\r\n                    style ={{\r\n                        color: \"white\",\r\n                      }}\r\n                    />\r\n                </FormGroup> */}\r\n\r\n                <Form/>\r\n                <HeaderbtnWrapper>\r\n                <Button to ='cotact' \r\n                    onMouseEnter={onHover} \r\n                    onMouseLeave={onHover}\r\n                >Find Blockchain {hover ? <ArrowForward /> : <ArrowRight />} \r\n                </Button>\r\n                \r\n            </HeaderbtnWrapper>\r\n            </Content>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Login\r\n\r\n{/* <video className='videoTag' autoPlay loop muted>\r\n    <source src={sample} type='video/mp4' />\r\n</video> */}",{"ruleId":"53","severity":1,"message":"54","line":5,"column":8,"nodeType":"55","messageId":"56","endLine":5,"endColumn":23},{"ruleId":"53","severity":1,"message":"57","line":2,"column":10,"nodeType":"55","messageId":"56","endLine":2,"endColumn":22},{"ruleId":"53","severity":1,"message":"58","line":2,"column":24,"nodeType":"55","messageId":"56","endLine":2,"endColumn":34},{"ruleId":"53","severity":1,"message":"59","line":5,"column":8,"nodeType":"55","messageId":"56","endLine":5,"endColumn":19},{"ruleId":"53","severity":1,"message":"60","line":7,"column":8,"nodeType":"55","messageId":"56","endLine":7,"endColumn":16},{"ruleId":"53","severity":1,"message":"61","line":15,"column":11,"nodeType":"55","messageId":"56","endLine":15,"endColumn":16},{"ruleId":"53","severity":1,"message":"62","line":16,"column":11,"nodeType":"55","messageId":"56","endLine":16,"endColumn":18},{"ruleId":"53","severity":1,"message":"63","line":2,"column":8,"nodeType":"55","messageId":"56","endLine":2,"endColumn":13},{"ruleId":"53","severity":1,"message":"64","line":3,"column":8,"nodeType":"55","messageId":"56","endLine":3,"endColumn":16},{"ruleId":"53","severity":1,"message":"65","line":4,"column":8,"nodeType":"55","messageId":"56","endLine":4,"endColumn":14},{"ruleId":"53","severity":1,"message":"66","line":5,"column":8,"nodeType":"55","messageId":"56","endLine":5,"endColumn":15},{"ruleId":"53","severity":1,"message":"67","line":6,"column":8,"nodeType":"55","messageId":"56","endLine":6,"endColumn":19},{"ruleId":"53","severity":1,"message":"68","line":2,"column":39,"nodeType":"55","messageId":"56","endLine":2,"endColumn":45},{"ruleId":"53","severity":1,"message":"69","line":4,"column":8,"nodeType":"55","messageId":"56","endLine":4,"endColumn":18},{"ruleId":"53","severity":1,"message":"70","line":7,"column":8,"nodeType":"55","messageId":"56","endLine":7,"endColumn":17},{"ruleId":"53","severity":1,"message":"71","line":8,"column":8,"nodeType":"55","messageId":"56","endLine":8,"endColumn":24},{"ruleId":"53","severity":1,"message":"72","line":13,"column":7,"nodeType":"55","messageId":"56","endLine":13,"endColumn":20},{"ruleId":"53","severity":1,"message":"73","line":37,"column":11,"nodeType":"55","messageId":"56","endLine":37,"endColumn":23},{"ruleId":"74","severity":2,"message":"75","line":54,"column":18,"nodeType":"76","endLine":54,"endColumn":31},{"ruleId":"74","severity":2,"message":"77","line":56,"column":26,"nodeType":"76","endLine":56,"endColumn":31},{"ruleId":"78","severity":1,"message":"79","line":94,"column":1,"nodeType":"80","messageId":"81","endLine":96,"endColumn":13},"no-unused-vars","'reportWebVitals' is defined but never used.","Identifier","unusedVar","'ArrowForward' is defined but never used.","'ArrowRight' is defined but never used.","'FindPatient' is defined but never used.","'testjson' is defined but never used.","'data1' is assigned a value but never used.","'onHover' is assigned a value but never used.","'Login' is defined but never used.","'Register' is defined but never used.","'Doctor' is defined but never used.","'Patient' is defined but never used.","'Displayjson' is defined but never used.","'Header' is defined but never used.","'SearchPage' is defined but never used.","'FormGroup' is defined but never used.","'FormControlLabel' is defined but never used.","'GreenCheckbox' is assigned a value but never used.","'handleChange' is assigned a value but never used.","react/jsx-no-undef","'Searchwrapper' is not defined.","JSXIdentifier","'Input' is not defined.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock"]
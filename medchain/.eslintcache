[{"C:\\Users\\lenti\\Documents\\GitHub\\medchain\\medchain\\src\\index.js":"1","C:\\Users\\lenti\\Documents\\GitHub\\medchain\\medchain\\src\\components\\patient\\patient.js":"2","C:\\Users\\lenti\\Documents\\GitHub\\medchain\\medchain\\src\\components\\register\\register.elements.js":"3","C:\\Users\\lenti\\Documents\\GitHub\\medchain\\medchain\\src\\components\\doctors\\doctor.js":"4","C:\\Users\\lenti\\Documents\\GitHub\\medchain\\medchain\\src\\components\\doctors\\find.js":"5","C:\\Users\\lenti\\Documents\\GitHub\\medchain\\medchain\\src\\components\\doctors\\doctor.elements.js":"6","C:\\Users\\lenti\\Documents\\GitHub\\medchain\\medchain\\src\\components\\display\\displayjson.js":"7"},{"size":453,"mtime":1606414656136,"results":"8","hashOfConfig":"9"},{"size":972,"mtime":1606833963445,"results":"10","hashOfConfig":"9"},{"size":1607,"mtime":1606544473061,"results":"11","hashOfConfig":"9"},{"size":3398,"mtime":1606836150392,"results":"12","hashOfConfig":"9"},{"size":303,"mtime":1606804251517,"results":"13","hashOfConfig":"9"},{"size":1254,"mtime":1606836433550,"results":"14","hashOfConfig":"9"},{"size":2522,"mtime":1606804251493,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"19"},"oq9wfg",{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22","usedDeprecatedRules":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\lenti\\Documents\\GitHub\\medchain\\medchain\\src\\index.js",["35"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render( <App />, document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n",["36","37"],"C:\\Users\\lenti\\Documents\\GitHub\\medchain\\medchain\\src\\components\\patient\\patient.js",["38"],"import React, { useEffect } from 'react'\r\nimport { PatientBackground, Logo, LogoWrp, BackgroundWrapper, PatientInfo, InfoWrapper, Photo, BlockchainWrapper } from './patient.elements'\r\nimport Blockchain from './blockchaincard'\r\n\r\nconst Patient = () => {    \r\n    return (\r\n        <PatientBackground>\r\n            <LogoWrp>\r\n                <Logo>\r\n                </Logo>\r\n                MedChain\r\n            </LogoWrp>\r\n            <BackgroundWrapper>  \r\n            <PatientInfo>\r\n                <InfoWrapper>\r\n                    <h1>Name</h1>\r\n                    <h1>Age</h1>\r\n                    <h1>Blood Type</h1>\r\n                    <h1>Alergies</h1>\r\n                </InfoWrapper>\r\n                <Photo>\r\n                </Photo>\r\n            </PatientInfo>\r\n            <BlockchainWrapper>\r\n                <Blockchain/>\r\n            </BlockchainWrapper>\r\n        </BackgroundWrapper>\r\n        </PatientBackground>\r\n    )  \r\n}\r\n\r\nexport default Patient\r\n",["39","40"],"C:\\Users\\lenti\\Documents\\GitHub\\medchain\\medchain\\src\\components\\register\\register.elements.js",[],"C:\\Users\\lenti\\Documents\\GitHub\\medchain\\medchain\\src\\components\\doctors\\doctor.js",["41","42","43","44","45"],"import React, { useState } from 'react';\r\nimport { ArrowForward, ArrowRight } from '../LogIn/login.elements';\r\nimport { DoctorBackground, FormWrapper, BlockchainWrapper, Paragraph, Header } from './doctor.elements';\r\nimport  MedicalForm  from './medicalform';\r\nimport FindPatient  from './find';\r\nimport { Input, InputButton } from './find.elements'\r\nimport testjson from './test.json';\r\n\r\n\r\nconst Doctor = () => {\r\n\r\n    const [hover, setHover] = useState(false);\r\n    const [key, setKey] = useState('');\r\n    const [blockchain,setBlockchain] = useState(testjson.chain);\r\n    const [clicked, setClicked] = useState(false);\r\n    const data1 = '/cadd75339625c5401af9b5cce0b0d402f56c44891001a885ca93f8f24b48079f'\r\n    const onHover = () => {\r\n        setHover(!hover)\r\n    };\r\n\r\n    const handleSubmit = e => {\r\n        console.log(key);\r\n\r\n\r\n        fetch('/record/chain/' + key, {\r\n            method: 'GET',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                setBlockchain(data);\r\n                console.log('Success:', data);\r\n               \r\n            })\r\n            .catch((error) => {\r\n                console.error('Error:', error);\r\n              });\r\n        setClicked(true);\r\n        setKey('');\r\n        console.log('here');\r\n\r\n        e.preventDefault();\r\n       \r\n    }\r\n\r\n    const handleChange = (event) =>{\r\n        setKey(event.target.value);\r\n        console.log('change handled');\r\n    }\r\n    const closeModal = () =>{\r\n        setClicked(false);\r\n    }\r\n   \r\n   \r\n    return (\r\n        <DoctorBackground>\r\n                <FormWrapper>\r\n                    <MedicalForm />\r\n                </FormWrapper>\r\n                <div style={(clicked ) ? {backgroundColor:\"#EFEFE8FF\",position:\"fixed\",right:\"0%\",top:\"0%\",width:\"45vw\", height:\"100vh\", display:\"flex\", alignItems:\"center\",flexDirection:\"column\", overflow:\"scroll\"} : {display:\"none\"}}>\r\n                    <div style={{position:\"fixed\",right:\"0\",fontWeight:\"bold\",marginRight:\"20px\",marginTop:\"40px;\",fontSize:\"1.8rem\",cursor:\"pointer\", color:\"#01bf71\"}} onClick={closeModal} >X</div>\r\n                    {blockchain.map(function(data,index) {\r\n                    return( \r\n                        <div style={{border:\"2px dotted purple\",width:\"max-content\"}} key={index}> \r\n                            <Header>index:{data.index}  </Header>\r\n                            <Paragraph> \r\n                                timestamp: {data.timestamp}\r\n                                <br/> hospital: {data.hospital}\r\n                                <br/> diagnosis: {data.diagnosis}\r\n                                <br/> perscription: {data.perscription}\r\n                                <br/> comment: {data.comment}\r\n                                <br/> previous: {data.previous_hash}     \r\n                            </Paragraph>\r\n\r\n                        </div>\r\n                    )})}\r\n                </div>\r\n            \r\n                <BlockchainWrapper onSubmit={handleSubmit} >\r\n                    <Input placeholder=\"ID\" value={key} onChange={handleChange}/>\r\n                    <InputButton type='submit' value=\"Find Patients Blockchain\" />  \r\n                </BlockchainWrapper>\r\n        </DoctorBackground>\r\n    )\r\n}\r\n\r\nexport default Doctor\r\n","C:\\Users\\lenti\\Documents\\GitHub\\medchain\\medchain\\src\\components\\doctors\\find.js",[],"C:\\Users\\lenti\\Documents\\GitHub\\medchain\\medchain\\src\\components\\doctors\\doctor.elements.js",[],"C:\\Users\\lenti\\Documents\\GitHub\\medchain\\medchain\\src\\components\\display\\displayjson.js",[],{"ruleId":"46","severity":1,"message":"47","line":5,"column":8,"nodeType":"48","messageId":"49","endLine":5,"endColumn":23},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"46","severity":1,"message":"54","line":1,"column":17,"nodeType":"48","messageId":"49","endLine":1,"endColumn":26},{"ruleId":"50","replacedBy":"55"},{"ruleId":"52","replacedBy":"56"},{"ruleId":"46","severity":1,"message":"57","line":2,"column":10,"nodeType":"48","messageId":"49","endLine":2,"endColumn":22},{"ruleId":"46","severity":1,"message":"58","line":2,"column":24,"nodeType":"48","messageId":"49","endLine":2,"endColumn":34},{"ruleId":"46","severity":1,"message":"59","line":5,"column":8,"nodeType":"48","messageId":"49","endLine":5,"endColumn":19},{"ruleId":"46","severity":1,"message":"60","line":16,"column":11,"nodeType":"48","messageId":"49","endLine":16,"endColumn":16},{"ruleId":"46","severity":1,"message":"61","line":17,"column":11,"nodeType":"48","messageId":"49","endLine":17,"endColumn":18},"no-unused-vars","'reportWebVitals' is defined but never used.","Identifier","unusedVar","no-native-reassign",["62"],"no-negated-in-lhs",["63"],"'useEffect' is defined but never used.",["62"],["63"],"'ArrowForward' is defined but never used.","'ArrowRight' is defined but never used.","'FindPatient' is defined but never used.","'data1' is assigned a value but never used.","'onHover' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]
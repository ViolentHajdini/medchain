[{"/Users/rendei3/Documents/GitHub/medchain/medchain/src/components/doctors/doctor.js":"1","/Users/rendei3/Documents/GitHub/medchain/medchain/src/App.js":"2","/Users/rendei3/Documents/GitHub/medchain/medchain/src/index.js":"3","/Users/rendei3/Documents/GitHub/medchain/medchain/src/components/LogIn/ButtonElement.js":"4","/Users/rendei3/Documents/GitHub/medchain/medchain/src/components/doctors/doctor.elements.js":"5","/Users/rendei3/Documents/GitHub/medchain/medchain/src/components/patient/patient.elements.js":"6","/Users/rendei3/Documents/GitHub/medchain/medchain/src/components/doctors/medicalform.js":"7","/Users/rendei3/Documents/GitHub/medchain/medchain/src/components/LogIn/login.elements.js":"8","/Users/rendei3/Documents/GitHub/medchain/medchain/src/components/doctors/find.elements.js":"9","/Users/rendei3/Documents/GitHub/medchain/medchain/src/components/Searchbar/searchbar.elements.js":"10","/Users/rendei3/Documents/GitHub/medchain/medchain/src/components/patient/patient.js":"11","/Users/rendei3/Documents/GitHub/medchain/medchain/src/components/register/form.elements.js":"12"},{"size":3642,"mtime":1607220869993,"results":"13","hashOfConfig":"14"},{"size":1363,"mtime":1607219883556,"results":"15","hashOfConfig":"14"},{"size":412,"mtime":1607195582914,"results":"16","hashOfConfig":"14"},{"size":323,"mtime":1606810154000,"results":"17","hashOfConfig":"14"},{"size":2758,"mtime":1607220954058,"results":"18","hashOfConfig":"14"},{"size":1902,"mtime":1607195582912,"results":"19","hashOfConfig":"14"},{"size":2049,"mtime":1607220875941,"results":"20","hashOfConfig":"14"},{"size":2819,"mtime":1606810154000,"results":"21","hashOfConfig":"14"},{"size":530,"mtime":1606810154276,"results":"22","hashOfConfig":"14"},{"size":348,"mtime":1606810154269,"results":"23","hashOfConfig":"14"},{"size":1880,"mtime":1607208536571,"results":"24","hashOfConfig":"14"},{"size":992,"mtime":1606810154000,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},"u7js99",{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/rendei3/Documents/GitHub/medchain/medchain/src/components/doctors/doctor.js",["53","54","55","56"],"import React, { useState, useEffect } from 'react';\nimport { DoctorBackground, FormWrapper, Blockchain, BlockchainWrapper,CloseIcon, Paragraph, Line, Modal, Tags } from './doctor.elements';\nimport  MedicalForm  from './medicalform';\nimport { Input, InputButton } from './find.elements'\nimport testjson from './test.json';\n\n\nconst Doctor = props => {\n\n    console.log(props.id);\n    const [key, setKey] = useState('');\n    const [blockchain,setBlockchain] = useState([]);\n    const [clicked, setClicked] = useState(false);\n    const data1 = 'cadd75339625c5401af9b5cce0b0d402f56c44891001a885ca93f8f24b48079f'\n    const [stat,setStat]= useState('');\n    const [remount,setRemount] = useState(false);\n    \n    useEffect(()=> {\n        if (remount){\n            getData();\n            setRemount(false);\n        }\n    });\n    \n   \n   \n    const handleRemount = (data) =>{\n        setRemount(data);\n    }\n\n    const handleSubmit = e => {\n        console.log(key);\n\n        getData();\n        \n        //setKey('');\n\n        e.preventDefault();\n       \n    }\n\n    const getData = () =>{\n        fetch('/record/chain/' + key, {\n            method: 'GET',\n            headers: {  \n                'Content-Type': 'application/json',\n            },\n            })\n            .then(response => {\n                setStat(response.status);\n                if(response.ok){\n                    setClicked(true);\n                }\n                if(!response.ok){\n                    setClicked(false);                 \n                    setKey('');   \n                }\n                console.log(response.status);\n                return response.json();\n            })\n            .then(data => {\n                setBlockchain(data);\n                console.log('Success:', data);\n            })\n            .catch((error) => {\n                console.error('Error:', error);\n              });\n\n    }\n\n\n    const handleChange = (event) =>{\n        setKey(event.target.value);\n        console.log('change handled');\n    }\n    const closeModal = () =>{\n        setKey('');\n        setClicked(false);\n        \n    }\n   \n    return (\n        <DoctorBackground>\n                <FormWrapper>\n                    <MedicalForm handleRemount={handleRemount} />\n                </FormWrapper>\n                <Modal bool={clicked}>\n                    <CloseIcon onClick={closeModal}> X </CloseIcon>\n                    {blockchain.map(function(data,index) {\n                    return( \n                       <Blockchain key={index}> \n                                <Line>Record: {data.index}</Line> \n                            <Paragraph> \n                                <Line> <Tags>TIMESTAMP:</Tags> {data.timestamp}</Line>\n                                <Line> <Tags> HOSPITAL:</Tags> {data.hospital}</Line>\n                                <Line><Tags>DIAGNOSIS:</Tags>  {data.diagnosis}</Line>\n                                <Line><Tags>PERSCRIPTION:</Tags>  {data.perscription}</Line>\n                                <Line><Tags>COMMENT:</Tags>  {data.comment}</Line>\n                                {/* <Line><Tags>PREVIOUS HASH:</Tags>  {data.previous_hash}</Line>          */}\n                            </Paragraph>\n                        </Blockchain>\n                    )})}\n                </Modal>\n            \n                <BlockchainWrapper onSubmit={handleSubmit} >\n                    <Input placeholder=\"ID\" value={key} onChange={handleChange}/>\n                    <InputButton type='submit' value=\"Find Patients Blockchain\" />  \n                </BlockchainWrapper>\n        </DoctorBackground>\n    )\n}\n\nexport default Doctor\n","/Users/rendei3/Documents/GitHub/medchain/medchain/src/App.js",["57"],"/Users/rendei3/Documents/GitHub/medchain/medchain/src/index.js",[],["58","59"],"/Users/rendei3/Documents/GitHub/medchain/medchain/src/components/LogIn/ButtonElement.js",[],["60","61"],"/Users/rendei3/Documents/GitHub/medchain/medchain/src/components/doctors/doctor.elements.js",[],"/Users/rendei3/Documents/GitHub/medchain/medchain/src/components/patient/patient.elements.js",[],"/Users/rendei3/Documents/GitHub/medchain/medchain/src/components/doctors/medicalform.js",[],"/Users/rendei3/Documents/GitHub/medchain/medchain/src/components/LogIn/login.elements.js",[],"/Users/rendei3/Documents/GitHub/medchain/medchain/src/components/doctors/find.elements.js",[],"/Users/rendei3/Documents/GitHub/medchain/medchain/src/components/Searchbar/searchbar.elements.js",[],"/Users/rendei3/Documents/GitHub/medchain/medchain/src/components/patient/patient.js",["62","63","64"],"/Users/rendei3/Documents/GitHub/medchain/medchain/src/components/register/form.elements.js",[],{"ruleId":"65","severity":1,"message":"66","line":5,"column":8,"nodeType":"67","messageId":"68","endLine":5,"endColumn":16},{"ruleId":"65","severity":1,"message":"69","line":14,"column":11,"nodeType":"67","messageId":"68","endLine":14,"endColumn":16},{"ruleId":"65","severity":1,"message":"70","line":15,"column":12,"nodeType":"67","messageId":"68","endLine":15,"endColumn":16},{"ruleId":"71","severity":1,"message":"72","line":18,"column":5,"nodeType":"67","endLine":18,"endColumn":14,"suggestions":"73"},{"ruleId":"65","severity":1,"message":"74","line":11,"column":1,"nodeType":"67","messageId":"68","endLine":11,"endColumn":5},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"75","replacedBy":"79"},{"ruleId":"77","replacedBy":"80"},{"ruleId":"65","severity":1,"message":"81","line":1,"column":17,"nodeType":"67","messageId":"68","endLine":1,"endColumn":26},{"ruleId":"65","severity":1,"message":"82","line":3,"column":10,"nodeType":"67","messageId":"68","endLine":3,"endColumn":18},{"ruleId":"65","severity":1,"message":"83","line":6,"column":12,"nodeType":"67","messageId":"68","endLine":6,"endColumn":22},"no-unused-vars","'testjson' is defined but never used.","Identifier","unusedVar","'data1' is assigned a value but never used.","'stat' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setRemount'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [remount, getData] as a second argument to the useEffect Hook.",["84"],"'Link' is defined but never used.","no-native-reassign",["85"],"no-negated-in-lhs",["86"],["85"],["86"],"'useEffect' is defined but never used.","'Redirect' is defined but never used.","'blockchain' is assigned a value but never used.",{"desc":"87","fix":"88"},"no-global-assign","no-unsafe-negation","Add dependencies array: [remount, getData]",{"range":"89","text":"90"},[814,814],", [remount, getData]"]
[{"C:\\Users\\lenti\\Documents\\GitHub\\medchain\\medchain\\src\\components\\doctors\\medicalform.js":"1","C:\\Users\\lenti\\Documents\\GitHub\\medchain\\medchain\\src\\components\\patient\\patient.js":"2","C:\\Users\\lenti\\Documents\\GitHub\\medchain\\medchain\\src\\components\\doctors\\doctor.js":"3","C:\\Users\\lenti\\Documents\\GitHub\\medchain\\medchain\\src\\components\\qrcode\\scanner.js":"4","C:\\Users\\lenti\\Documents\\GitHub\\medchain\\medchain\\src\\components\\doctors\\doctor.elements.js":"5","C:\\Users\\lenti\\Documents\\GitHub\\medchain\\medchain\\src\\index.js":"6","C:\\Users\\lenti\\Documents\\GitHub\\medchain\\medchain\\src\\components\\LogIn\\ButtonElement.js":"7","C:\\Users\\lenti\\Documents\\GitHub\\medchain\\medchain\\src\\components\\doctors\\find.elements.js":"8","C:\\Users\\lenti\\Documents\\GitHub\\medchain\\medchain\\src\\components\\LogIn\\login.elements.js":"9","C:\\Users\\lenti\\Documents\\GitHub\\medchain\\medchain\\src\\components\\patient\\patient.elements.js":"10","C:\\Users\\lenti\\Documents\\GitHub\\medchain\\medchain\\src\\components\\LogIn\\login.js":"11","C:\\Users\\lenti\\Documents\\GitHub\\medchain\\medchain\\src\\components\\Searchbar\\searchbar.elements.js":"12","C:\\Users\\lenti\\Documents\\GitHub\\medchain\\medchain\\src\\components\\register\\form.elements.js":"13","C:\\Users\\lenti\\Documents\\GitHub\\medchain\\medchain\\src\\components\\doctors\\medicalform.elements.js":"14"},{"size":3438,"mtime":1607376627363,"results":"15","hashOfConfig":"16"},{"size":3195,"mtime":1607296597611,"results":"17","hashOfConfig":"16"},{"size":4043,"mtime":1607378596269,"results":"18","hashOfConfig":"16"},{"size":585,"mtime":1607296274345,"results":"19","hashOfConfig":"16"},{"size":3045,"mtime":1607302479914,"results":"20","hashOfConfig":"16"},{"size":412,"mtime":1607123559329,"results":"21","hashOfConfig":"16"},{"size":340,"mtime":1606833963328,"results":"22","hashOfConfig":"16"},{"size":558,"mtime":1606804251511,"results":"23","hashOfConfig":"16"},{"size":3029,"mtime":1607224268743,"results":"24","hashOfConfig":"16"},{"size":2211,"mtime":1607295051637,"results":"25","hashOfConfig":"16"},{"size":2599,"mtime":1607378146886,"results":"26","hashOfConfig":"16"},{"size":365,"mtime":1606833963361,"results":"27","hashOfConfig":"16"},{"size":1048,"mtime":1606804251536,"results":"28","hashOfConfig":"16"},{"size":1386,"mtime":1606804251523,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},"oq9wfg",{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"33"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\lenti\\Documents\\GitHub\\medchain\\medchain\\src\\components\\doctors\\medicalform.js",["63"],"import React, { useState, useEffect } from 'react'\r\nimport { Form, MedicalFormWrapper, Inputs, InputWrapperOne, InputsTwo, InputsThree } from './medicalform.elements';\r\nimport { InputButton } from './doctor.elements';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nconst axios = require('axios');\r\n    \r\n\r\nconst MedicalForm = props => {\r\n    const [id, setId] = useState('');\r\n    const [hospital, setHospital] = useState('');\r\n    const [diagnosis, setDiagnosis] = useState('');\r\n    const [perscription, setPerscription] = useState('');\r\n    const [comment, setComment] = useState('');\r\n    const [bool, setBool] = useState(true);\r\n    \r\n\r\n    useEffect(()=>{\r\n        if(props.check && bool){ \r\n           setId(props.pubkey); \r\n           setBool(false);\r\n          \r\n        }\r\n        if(!props.check && !bool ){\r\n            \r\n            setBool(true);\r\n            setId('');\r\n        }\r\n    });\r\n          \r\n    const GreenCheckbox = withStyles({\r\n        root: {\r\n          color:\"#01bf71\",\r\n          },\r\n        },\r\n      )((props) => <Checkbox color=\"default\" {...props} />);\r\n\r\n    console.log(props.pubkey);\r\n    console.log(props.sig);\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        axios.post('/record/new', {\r\n            id: id,\r\n            data: {\r\n                hospital: hospital,\r\n                diagnosis: diagnosis,\r\n                perscription: perscription,\r\n                comment: comment\r\n            }\r\n        })\r\n        .then(res => {\r\n            if(!props.checked){\r\n                setId('');\r\n            }\r\n            setBool(true);\r\n            setHospital('');\r\n            setDiagnosis('');\r\n            setPerscription('');\r\n            setComment('');\r\n            props.handleRemount(true);\r\n            return console.log(res)\r\n        })\r\n        .catch(()=>{\r\n            alert(\"ID could not be found.\");\r\n            console.log('Error:','ID could not be found');\r\n        });\r\n    }\r\n\r\n    return (\r\n        <MedicalFormWrapper>\r\n            <Form onSubmit={handleSubmit}>\r\n                <h1 style={{color:'#00ab65'}}> Medical Form </h1>\r\n                <InputWrapperOne>\r\n                    <Inputs disabled={props.check} value={id} placeholder=\"ID\" onChange={e => setId(e.target.value)} />\r\n                    <Inputs value={hospital} placeholder=\"Hospital this block was issued from\" onChange={e => setHospital(e.target.value)} /> \r\n                </InputWrapperOne>\r\n                <InputsTwo value={diagnosis} placeholder=\"Patient Diagnosis\" onChange={e => setDiagnosis(e.target.value)} />\r\n                <InputsThree value={perscription} placeholder=\"Perscription if required\" onChange={e => setPerscription(e.target.value)} />\r\n                <InputsThree value={comment} placeholder=\"Additional Notes\" onChange={e => setComment(e.target.value)}/>\r\n                <div style={{display:\"flex\", flexDirection:\"column\", alignItems:\"center\"}}>\r\n                    <FormControlLabel  disabled={!props.check} checked={props.check} control={<GreenCheckbox  name=\"checkedG\" />} label=\"Signature\" />\r\n                    <InputButton type='submit' value='Add Block'></InputButton>\r\n                </div>  \r\n            </Form>\r\n            \r\n        </MedicalFormWrapper>\r\n    )\r\n}\r\n\r\nexport default MedicalForm\r\n",["64","65"],"C:\\Users\\lenti\\Documents\\GitHub\\medchain\\medchain\\src\\components\\patient\\patient.js",[],"C:\\Users\\lenti\\Documents\\GitHub\\medchain\\medchain\\src\\components\\doctors\\doctor.js",["66"],"import React, { useState, useEffect } from 'react';\r\nimport { DoctorBackground, FormWrapper, Blockchain, BlockchainWrapper,CloseIcon, Paragraph, Line, Modal, Tags } from './doctor.elements';\r\nimport  MedicalForm  from './medicalform';\r\nimport QrReader from 'react-qr-reader';\r\n\r\n\r\nconst Doctor = props => {\r\n\r\n    console.log(props.id);\r\n    const [key, setKey] = useState('');\r\n    const [blockchain,setBlockchain] = useState([]);\r\n    const [clicked, setClicked] = useState(false);\r\n    const [remount,setRemount] = useState(false);\r\n    const [token, setToken] = useState([]);\r\n\r\n    useEffect(()=> {\r\n        if (remount && clicked){\r\n            getData();\r\n            setRemount(false);\r\n        }\r\n    });\r\n\r\n    const handleScan = data => {\r\n        if (data) {\r\n            let temp = JSON.parse(data);\r\n            setToken([temp.pubkey,temp.sig]);\r\n            setClicked(true);\r\n            if(temp.pubkey.length > 0){\r\n                setKey(temp.pubkey);\r\n                setRemount(true);\r\n            }\r\n            console.log('scanned');\r\n        }\r\n      }\r\n      \r\n      const handleError = err => {\r\n        console.error(err);\r\n      }\r\n   \r\n    const handleRemount = (data) =>{\r\n        setRemount(data);\r\n    }\r\n\r\n    const getData = () =>{\r\n        fetch('/record/chain/' + key, {\r\n            method: 'GET',\r\n            headers: {  \r\n                'Content-Type': 'application/json',\r\n            },\r\n            })\r\n            .then(response => {\r\n                if(response.ok){\r\n                    setClicked(true);  \r\n                }\r\n                if(!response.ok){\r\n                    setClicked(false); \r\n                    setKey('');  \r\n                    alert('ID could not be found');              \r\n                }\r\n                console.log(response.status);\r\n                return response.json();\r\n            })\r\n            .then(data => {\r\n                setBlockchain(data);\r\n                console.log('Success:', data);\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error:', error);\r\n              });\r\n    }\r\n\r\n    const closeModal = () =>{\r\n        setKey('');\r\n        setClicked(false);\r\n        setToken([]);\r\n    }\r\n\r\n    const onlyOneBlock = (data) =>{\r\n        setClicked(data);\r\n    }\r\n   \r\n    return (\r\n        <DoctorBackground>\r\n                <FormWrapper>\r\n                    <MedicalForm onlyOneBlock={onlyOneBlock} check={clicked} pubkey={token[0]} sig={token[1]} handleRemount={handleRemount} />\r\n                    {console.log(key)}\r\n                </FormWrapper>\r\n                <Modal bool={clicked}>  \r\n                    <CloseIcon onClick={closeModal}> X </CloseIcon>\r\n                    {blockchain.map(function(data,index) {\r\n                    return( \r\n                       <Blockchain key={index}> \r\n                                <Line>Record: {data.index}</Line> \r\n                            <Paragraph> \r\n                                <Line> <Tags>TIMESTAMP:</Tags> {data.timestamp}</Line>\r\n                                <Line> <Tags> HOSPITAL:</Tags> {data.hospital}</Line>\r\n                                <Line><Tags>DIAGNOSIS:</Tags>  {data.diagnosis}</Line>\r\n                                <Line><Tags>PERSCRIPTION:</Tags>  {data.perscription}</Line>\r\n                                <Line><Tags>COMMENT:</Tags>  {data.comment}</Line>\r\n                            </Paragraph>\r\n                        </Blockchain>\r\n                    )})}\r\n                </Modal>\r\n                <BlockchainWrapper>\r\n                    {!clicked ? <div style={{height:\"300px\", width: \"300px\" }}>\r\n                        <QrReader\r\n                            delay={300}\r\n                            onError={handleError}\r\n                            onScan={handleScan}\r\n                            style={{ width: '100%' }}\r\n                        />\r\n                    </div> : null}\r\n                </BlockchainWrapper>\r\n        </DoctorBackground>\r\n    )\r\n}\r\n\r\nexport default Doctor\r\n","C:\\Users\\lenti\\Documents\\GitHub\\medchain\\medchain\\src\\components\\qrcode\\scanner.js",[],"C:\\Users\\lenti\\Documents\\GitHub\\medchain\\medchain\\src\\components\\doctors\\doctor.elements.js",[],"C:\\Users\\lenti\\Documents\\GitHub\\medchain\\medchain\\src\\index.js",[],"C:\\Users\\lenti\\Documents\\GitHub\\medchain\\medchain\\src\\components\\LogIn\\ButtonElement.js",[],"C:\\Users\\lenti\\Documents\\GitHub\\medchain\\medchain\\src\\components\\doctors\\find.elements.js",[],["67","68"],"C:\\Users\\lenti\\Documents\\GitHub\\medchain\\medchain\\src\\components\\LogIn\\login.elements.js",[],"C:\\Users\\lenti\\Documents\\GitHub\\medchain\\medchain\\src\\components\\patient\\patient.elements.js",["69"],"import styled from 'styled-components';\r\nimport token from '../../media/blocksvg.svg'\r\nimport photo from '../../media/photo.png'\r\n\r\nexport const PatientBackground = styled.div`\r\n    background: #EFEFE8FF;\r\n    position: relative;\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    width: 100%;\r\n    height: 100vh;\r\n    z-index: 1;\r\n` \r\nexport const QRWrapper = styled.div`\r\n    display:flex;\r\n    position: relative;\r\n    background-repeat:no-repeat;\r\n    width: 450px;\r\n    height: 300px;\r\n    border: none;\r\n    background-size: contain;\r\n    background-position: center center;\r\n    text-decoration: none;\r\n    margin-left: 8px;\r\n    align-items: center;\r\n    justify-content: center;\r\n`\r\n\r\nexport const BackgroundWrapper = styled.div`\r\n    display:flex;\r\n    flex-direction: row;\r\n`\r\n\r\nexport const Logo = styled.svg`\r\n    background-image:url(${token});\r\n    display: flex;\r\n    position: relative;\r\n    background-repeat:no-repeat;\r\n    width: 35px;\r\n    height: 35px;\r\n    background-position: center center; \r\n    margin-bottom: 2.5rem;\r\n    margin-right: 10px;\r\n`\r\n\r\nexport const BlockchainWrapper = styled.div`\r\n    background: white;\r\n    height: 600px;\r\n    width: 50vw;\r\n    overflow-y: scroll;\r\n    display:flex;\r\n    flex-direction: column;\r\n    align-items: center; \r\n`\r\n\r\nexport const LogoWrp = styled.div`\r\n    display: flex;\r\n    position: relative;\r\n    font-family: Montserrat;\r\n    font-size: 1.9rem;\r\n    font-weight: 500;\r\n    justify-content: center;\r\n    color: white;\r\n    margin-top: 1rem;\r\n    color: black;\r\n`\r\n\r\nexport const PatientInfo = styled.div`\r\n    background: white;\r\n`\r\n\r\nexport const InfoWrapper = styled.div`\r\n    background: white;\r\n    width: 480px;\r\n    height: 280px;\r\n    color: black;\r\n    font-size: 7px;\r\n    text-align: left;\r\n    padding-left: 15px;\r\n    padding-top: 10px;\r\n    font-family: 'Montserrat', sans-serif;\r\n    font-weight: 500;\r\n`\r\n\r\n\r\nexport const Blockchain = styled.div `\r\n    height: 100px;\r\n    width: 100px;   \r\n`\r\n\r\nexport const Tokens = styled.h1 `\r\n    font-size: 15px;\r\n    word-wrap: break-word;\r\n    width: 400px;\r\n    height: max-content;\r\n    margin: 5px;\r\n    color: #495464;\r\n    padding-top: 10px;\r\n`","C:\\Users\\lenti\\Documents\\GitHub\\medchain\\medchain\\src\\components\\LogIn\\login.js",["70"],"C:\\Users\\lenti\\Documents\\GitHub\\medchain\\medchain\\src\\components\\Searchbar\\searchbar.elements.js",[],"C:\\Users\\lenti\\Documents\\GitHub\\medchain\\medchain\\src\\components\\register\\form.elements.js",[],"C:\\Users\\lenti\\Documents\\GitHub\\medchain\\medchain\\src\\components\\doctors\\medicalform.elements.js",[],{"ruleId":"71","severity":1,"message":"72","line":20,"column":5,"nodeType":"73","endLine":20,"endColumn":14,"suggestions":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"71","severity":1,"message":"79","line":16,"column":5,"nodeType":"73","endLine":16,"endColumn":14,"suggestions":"80"},{"ruleId":"75","replacedBy":"81"},{"ruleId":"77","replacedBy":"82"},{"ruleId":"83","severity":1,"message":"84","line":3,"column":8,"nodeType":"73","messageId":"85","endLine":3,"endColumn":13},{"ruleId":"83","severity":1,"message":"86","line":2,"column":90,"nodeType":"73","messageId":"85","endLine":2,"endColumn":99},"react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setId'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [props.check, props.pubkey, bool] as a second argument to the useEffect Hook.","Identifier",["87"],"no-native-reassign",["88"],"no-negated-in-lhs",["89"],"React Hook useEffect contains a call to 'setRemount'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [remount, clicked, getData] as a second argument to the useEffect Hook.",["90"],["88"],["89"],"no-unused-vars","'photo' is defined but never used.","unusedVar","'QRWrapper' is defined but never used.",{"desc":"91","fix":"92"},"no-global-assign","no-unsafe-negation",{"desc":"93","fix":"94"},"Add dependencies array: [props.check, props.pubkey, bool]",{"range":"95","text":"96"},"Add dependencies array: [remount, clicked, getData]",{"range":"97","text":"98"},[1034,1034],", [props.check, props.pubkey, bool]",[711,711],", [remount, clicked, getData]"]